// Code generated by sts v0.0.7. DO NOT EDIT.

package sts

func InputBar2DestBar(src input.Bar) dest.Bar {
	return dest.Bar{
		DI: src.BI,
		DS: src.BS,
		DF: src.BF,
	}
}
func DestBar2InputBar(src dest.Bar) input.Bar {
	return input.Bar{
		BI: src.DI,
		BS: src.DS,
		BF: src.DF,
	}
}
func InputBarPtr2DestBarPtr(src *input.Bar) *dest.Bar {
	if src == nil {
		return nil
	}
	m := InputBar2DestBar(*src)
	return &m
}
func DestBarPtr2InputBarPtr(src *dest.Bar) *input.Bar {
	if src == nil {
		return nil
	}
	m := DestBar2InputBar(*src)
	return &m
}
func InputBarList2DestBarList(src []input.Bar) []dest.Bar {
	if src == nil {
		return nil
	}
	res := make([]dest.Bar, len(src))
	for k, s := range src {
		p := InputBar2DestBar(s)
		res[k] = p
	}
	return res
}
func DestBarList2InputBarList(src []dest.Bar) []input.Bar {
	if src == nil {
		return nil
	}
	res := make([]input.Bar, len(src))
	for k, s := range src {
		p := DestBar2InputBar(s)
		res[k] = p
	}
	return res
}
func InputBarList2DestBarPtrList(src []input.Bar) []*dest.Bar {
	if src == nil {
		return nil
	}
	res := make([]*dest.Bar, len(src))
	for k, s := range src {
		p := InputBar2DestBar(s)
		res[k] = &p
	}
	return res
}
func DestBarPtrList2InputBarList(src []*dest.Bar) []input.Bar {
	if src == nil {
		return nil
	}
	res := make([]input.Bar, len(src))
	for k, s := range src {
		p := DestBar2InputBar(*s)
		res[k] = p
	}
	return res
}
func InputBarPtrList2DestBarList(src []*input.Bar) []dest.Bar {
	if src == nil {
		return nil
	}
	res := make([]dest.Bar, len(src))
	for k, s := range src {
		p := InputBar2DestBar(*s)
		res[k] = p
	}
	return res
}
func DestBarList2InputBarPtrList(src []dest.Bar) []*input.Bar {
	if src == nil {
		return nil
	}
	res := make([]*input.Bar, len(src))
	for k, s := range src {
		p := DestBar2InputBar(s)
		res[k] = &p
	}
	return res
}
func InputBarPtrList2DestBarPtrList(src []*input.Bar) []*dest.Bar {
	if src == nil {
		return nil
	}
	res := make([]*dest.Bar, len(src))
	for k, s := range src {
		p := InputBar2DestBar(*s)
		res[k] = &p
	}
	return res
}
func DestBarPtrList2InputBarPtrList(src []*dest.Bar) []*input.Bar {
	if src == nil {
		return nil
	}
	res := make([]*input.Bar, len(src))
	for k, s := range src {
		p := DestBar2InputBar(*s)
		res[k] = &p
	}
	return res
}
